;
; Settings for Rohm Semiconductor RoKiX evaluation kit
;

[root]
; configuration file format version
version=2

[configuration]
; Board selection

; RoKiX IoT Board, main board only
board=../cfg/rokix_board_iot_i2c.json
;board=../cfg/rokix_board_iot_spi.json

; RoKiX IoT Board, with addon board
;board=../cfg/rokix_board_iot_spi_addon.json
;board=../cfg/rokix_board_iot_i2c_addon.json
;board=../cfg/rokix_board_iot_i2c_rohm5.json

; Kionix IoT Board
;board=../cfg/rokix_board_k1_build2_i2c.json
;board=../cfg/rokix_board_k1_build3_i2c.json
;board=../cfg/rokix_board_k1_build4_i2c.json
;board=../cfg/rokix_board_k1_build4_i2c-add-on.json

; Arduino Uno R3 board with Rohm sensor shield
;board=../cfg/rokix_board_arduino_uno_evk00x_usb.json
;board=../cfg/rokix_board_arduino_uno_evk10x_usb.json

; Nordic Semiconductor nRF51-DK board with Rohm sensor shield EVK-101
;board=../cfg/rokix_board_nrf51dk-evk-10x_i2c.json

; Cypress CY8KIT059 development board board with RoKiX multi platform adapter boards
;board=../cfg/rokix_board_cy8ckit059_a1_i2c_usb.json
;board=../cfg/rokix_board_cy8ckit059_a1_spi_usb.json
;board=../cfg/rokix_board_cy8ckit059_a2_i2c_usb.json
;board=../cfg/rokix_board_cy8ckit059_a2_spi_usb.json

; Aardvark I2C / SPI host adapter
;board=../cfg/rokix_board_aardvark_i2c_usb.json
;board=../cfg/rokix_board_aardvark_spi_usb.json

; Other 
;board=../cfg/rokix_board_nrf52480dk-evk-example_i2c.json
;board=linux

[bus2_settings]
; bus2 selection for board
; NOTE: bus2=USB setting works for both USB_SERIAL and USB_AARDVARK if only one of those is connected
bus2=USB

;bus2=USB_SERIAL
;bus2=USB_AARDVARK

;bus2=BLE

; USB serial COM port number or 'auto' for autodetection
serial_port=auto

; IP address for socket connection
socket_ip=192.168.1.2

; MAC address for bluetooth connection. Full address or first bytes
;ble_mac=CD

[generic]
; Global debug logging settings : DEBUG / INFO / WARNING / ERROR / CRITICAL
; logging_level      = DEBUG

; This setting defines how data ready function works in *_data_logger.py applications
; DRDY_REG_POLL / INTERVAL_READ / ADAPTER_GPIO1_INT / ADAPTER_GPIO2_INT
drdy_operation     = ADAPTER_GPIO1_INT
;drdy_operation     = ADAPTER_GPIO2_INT
;drdy_operation     = DRDY_REG_POLL
;drdy_operation      = INTERVAL_READ
; polling interval for INTERVAL_READ setting. Interval in ms (default 40 ms -> 25Hz)
drdy_poll_interval  = 40

; This setting is for ASIC engine demo applications
; It is used for selecting generic GPIO vs register polling functionality. 
; TRUE,  Use adapter gpio as interrupt input pins.
; FALSE, Poll interrupts from sensor registers.
use_adapter_int_pins = TRUE
